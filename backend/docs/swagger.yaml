definitions:
  models.AuthResponse:
    properties:
      message:
        type: string
      token:
        type: string
      user_id:
        type: integer
    type: object
  models.CountResponse:
    properties:
      count:
        example: 10
        type: integer
    type: object
  models.CreatedResponse:
    properties:
      id:
        example: 12345
        type: integer
      message:
        example: Resource created successfully
        type: string
    type: object
  models.ErrorResponse:
    properties:
      error:
        example: A descriptive error message
        type: string
    type: object
  models.ImageItemCreate:
    properties:
      bytes:
        type: string
    type: object
  models.ImageItemRead:
    properties:
      bytes:
        type: string
    type: object
  models.ItemCreate:
    properties:
      image:
        $ref: '#/definitions/models.ImageItemCreate'
      position_x:
        example: 1
        type: number
      position_y:
        example: 1
        type: number
      text:
        $ref: '#/definitions/models.TextItemCreate'
      todo_list:
        items:
          $ref: '#/definitions/models.TodoItemFieldCreate'
        type: array
      z_index:
        example: 1
        type: integer
    type: object
  models.ItemRead:
    properties:
      height:
        type: number
      id:
        type: integer
      image:
        $ref: '#/definitions/models.ImageItemRead'
      position_x:
        type: number
      position_y:
        type: number
      text:
        $ref: '#/definitions/models.TextItemRead'
      todo_list:
        items:
          $ref: '#/definitions/models.TodoListItemFieldRead'
        type: array
      width:
        type: number
      workspace_id:
        type: integer
      z_index:
        type: integer
    type: object
  models.MessageResponse:
    properties:
      message:
        example: Descriptive message
        type: string
    type: object
  models.TextItemCreate:
    properties:
      content:
        example: Hello, world!
        type: string
    type: object
  models.TextItemRead:
    properties:
      content:
        type: string
    type: object
  models.TodoItemFieldCreate:
    properties:
      content:
        example: Hello, world!
        type: string
      done:
        type: boolean
    type: object
  models.TodoListItemFieldRead:
    properties:
      done:
        type: boolean
      text:
        $ref: '#/definitions/models.TextItemRead'
    type: object
  models.UserCreate:
    properties:
      login:
        example: john123
        type: string
      password:
        example: "123"
        type: string
    type: object
  models.UserRead:
    properties:
      id:
        example: 12345
        type: integer
      username:
        type: string
      workspace_id:
        type: integer
    type: object
  models.UserUpdate:
    properties:
      login:
        example: john123
        type: string
      new_password:
        example: "234"
        type: string
      old_password:
        example: "123"
        type: string
    type: object
  models.WorkspaceRead:
    properties:
      items:
        items:
          $ref: '#/definitions/models.ItemRead'
        type: array
    type: object
info:
  contact: {}
  description: API for ProdSpace application
  title: ProdSpace API
  version: "1.0"
paths:
  /login:
    post:
      consumes:
      - application/json
      parameters:
      - description: Login credentials
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/models.UserCreate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AuthResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Authenticate user
      tags:
      - auth
  /register:
    post:
      consumes:
      - application/json
      parameters:
      - description: User create payload
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UserCreate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CreatedResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Register a new user
      tags:
      - auth
  /users:
    get:
      consumes:
      - application/json
      description: Retrieve a paginated list of users with optional page and limit
        query parameters
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Number of users per page
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.UserRead'
            type: array
        "400":
          description: Malformed query parameters
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get paginated list of users
      tags:
      - users
  /users/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: User deleted successfully
          schema:
            $ref: '#/definitions/models.MessageResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: User Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Delete a user by ID
      tags:
      - users
    get:
      consumes:
      - application/json
      description: Retrieve a user by their unique ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UserRead'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: User Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get a user by ID
      tags:
      - users
    patch:
      consumes:
      - application/json
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: User update payload
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UserUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: Updated Successfully
          schema:
            $ref: '#/definitions/models.MessageResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: User Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Update an existing user by ID
      tags:
      - users
  /users/count:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: User count object
          schema:
            $ref: '#/definitions/models.CountResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get the total number of users
      tags:
      - users
  /workspaces/{user_id}:
    get:
      consumes:
      - application/json
      description: Retrieve a workspace by their unique user id
      parameters:
      - description: User id
        in: path
        name: user_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.WorkspaceRead'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: User Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get workspace by user id
      tags:
      - workspaces
  /workspaces/{user_id}/items:
    post:
      consumes:
      - application/json
      parameters:
      - description: Item to create
        in: body
        name: item
        required: true
        schema:
          $ref: '#/definitions/models.ItemCreate'
      - description: User ID
        in: path
        name: user_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.CreatedResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Append a workspace item
      tags:
      - workspaces
  /workspaces/{user_id}/items/{item_id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: integer
      - description: Item ID
        in: path
        name: item_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.MessageResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Delete a workspace item by item ID and user ID
      tags:
      - workspaces
  /workspaces/my:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.WorkspaceRead'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: User Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get a user's workspace
      tags:
      - workspaces
  /workspaces/my/items:
    post:
      consumes:
      - application/json
      parameters:
      - description: Item to create
        in: body
        name: item
        required: true
        schema:
          $ref: '#/definitions/models.ItemCreate'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.CreatedResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Append a workspace item
      tags:
      - workspaces
  /workspaces/my/items/{item_id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Item ID
        in: path
        name: item_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.MessageResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Delete a workspace item by item ID and user ID
      tags:
      - workspaces
securityDefinitions:
  BearerAuth:
    description: Type "Bearer" followed by a space and the JWT token
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
